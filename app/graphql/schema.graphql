"""
A folder containing notes
"""
type Folder {
  name: String
  notes: [Note!]!
}

"""
Autogenerated input type of LoginMutation
"""
input LoginMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
}

"""
Autogenerated return type of LoginMutation
"""
type LoginMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  viewer: User
}

"""
Autogenerated input type of LogoutMutation
"""
input LogoutMutationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of LogoutMutation
"""
type LogoutMutationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User
}

type Mutation {
  loginMutation(input: LoginMutationInput!): LoginMutationPayload!
  logoutMutation(input: LogoutMutationInput!): LogoutMutationPayload!
}

"""
A note
"""
type Note {
  content: String
  folder: Folder
  tags: [Tag!]!
}

"""
The query root of this schema
"""
type Query {
  viewer: User
}

"""
Object to tag notes
"""
type Tag {
  name: String
  notes: [Note!]!
}

"""
A user
"""
type User {
  """
  Tags made by the user
  """
  Tags: [Tag!]!
  email: String
  firstName: String

  """
  Folders made by the user
  """
  folders: [Folder!]!
  id: ID!
  lastName: String

  """
  Notes made by the user
  """
  notes: [Note!]!
}